# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	 
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		proxy_pass http://localhost:3000;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}
}


server {

	server_name imporprima.com www.imporprima.com;

	root /var/www/html/imporprima.com;
	index index.php index.html index.htm;

	location / {
		try_files $uri $uri/ /index.php?$args;
	}

	location ~ \.php$ {
		try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include fastcgi_params;
		
	}


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/imporprima.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/imporprima.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


server {

	server_name inforprima.com www.inforprima.com;

	root /var/www/html/imporprima.com;
	index index.php index.html index.htm;

	location / {
		try_files $uri $uri/ /index.php?$args;
	}

	location ~ \.php$ {
		try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include fastcgi_params;
		
	}


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/inforprima.com-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/inforprima.com-0001/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
server {
#
	server_name consmontenegro.com www.consmontenegro.com;
#
	root /var/www/consmontenegro.com/public_html;
	index index.html;

	location / {
		try_files $uri $uri/ =404;
	}

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/consmontenegro.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/consmontenegro.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
    server_name www.eduardoayora.com eduardoayora.com; # managed by Certbot


	location /menu/ { 
		
		proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_pass http://localhost:1000/;
                proxy_redirect off;
    	}

	location /socket.io/ {
		
		proxy_pass http://localhost:1000;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;

        } 

	location / { 
        	proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        	proxy_set_header Host $http_host;
        	proxy_set_header X-NginX-Proxy true; 
        	proxy_pass http://localhost:3000/;
        	proxy_redirect off;
    	} 

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/eduardoayora.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/eduardoayora.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot



}
server {
    if ($host = www.eduardoayora.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = eduardoayora.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name www.eduardoayora.com eduardoayora.com;
    return 404; # managed by Certbot




}

server {
    if ($host = www.consmontenegro.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = consmontenegro.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80;
	listen [::]:80;
	server_name consmontenegro.com www.consmontenegro.com;
    return 404; # managed by Certbot




}




server {
    if ($host = www.imporprima.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = imporprima.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



	server_name imporprima.com www.imporprima.com;
    listen 80;
    return 404; # managed by Certbot




}


server {
    if ($host = www.inforprima.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = inforprima.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



	server_name inforprima.com www.inforprima.com;
    listen 80;
    return 404; # managed by Certbot




}
